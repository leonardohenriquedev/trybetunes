{"version":3,"sources":["components/Loading.jsx","services/userAPI.js","login.png","pages/Login.jsx","components/Header.jsx","services/searchAlbumsAPI.js","pages/Search.jsx","services/favoriteSongsAPI.js","components/MusicCard.jsx","services/musicsAPI.js","pages/Album.jsx","pages/Favorites.jsx","pages/Profile.jsx","pages/ProfileEdit.jsx","pages/NotFound.jsx","App.js","index.js"],"names":["Loading","className","Component","USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","Login","state","inputName","loading","redirect","handleChange","bind","onLoading","renderPage","event","target","id","value","this","setState","a","to","src","logo","alt","autoComplete","htmlFor","type","onChange","placeholder","onKeyPress","key","length","onClick","disabled","Header","renderUser","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","Search","inputSearch","currentSearch","searchResult","undefined","pesquisou","searchAlbum","renderAlbum","album","albumName","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","favorites","handleCange","setFavorites","checked","props","music","updateFavorites","trackName","previewUrl","controls","kind","some","byFavorites","defaultProps","getMusics","request","requestJson","Album","musics","isFavorite","renderMusics","setStates","match","params","array","index","push","replace","Favorites","loadFavoriteSongs","Profile","profile","loadProfile","ProfileEdit","buttonValidation","updateAndRedirect","result","Object","values","every","includes","updatedUser","NotFound","App","exact","path","render","React","ReactDOM","StrictMode","document","getElementById"],"mappings":"uSAEqBA,E,4JACnB,WACE,OAAO,qBAAKC,UAAU,UAAf,SAAyB,iE,GAFCC,aCF/BC,EAAW,OAKXC,EAAW,SAACC,GAAD,OAAUC,aAAaC,QAAQJ,EAAUK,KAAKC,UAAUJ,KASnEK,EAAkB,SAACC,GAAD,OAAc,SAACC,GACrCC,YAAW,WACTD,EAASD,KAfG,QAmBHG,EAAU,kBAAM,IAAIC,SAAQ,SAACC,GACxC,IAAIX,EAjBiBG,KAAKS,MAAMX,aAAaY,QAAQf,IAkBxC,OAATE,IACFA,EAAO,IAETK,EAAgBL,EAAhBK,CAAsBM,OAGXG,EAAa,SAACd,GAAD,OAAU,IAAIU,SAAQ,SAACC,GAO/CZ,EAAS,2BANS,CAChBgB,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,YAAa,KAEalB,IAC5BK,EAlCqB,KAkCrBA,CAAgCM,OCpCnB,MAA0B,kCCMpBQ,E,kDACnB,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,UAAW,GACXC,SAAS,EACTC,UAAU,GAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBAXN,E,gDAcd,SAAaG,GACX,MAAsBA,EAAMC,OAApBC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,MACZC,KAAKC,SAAL,eACGH,EAAKC,M,8DAIV,WAAgBV,GAAhB,SAAAa,EAAA,6DACEF,KAAKC,SAAS,CACZX,SAAS,IAFb,SAKQR,EAAWO,GALnB,OAOEW,KAAKC,SAAS,CACZX,SAAS,EACTC,UAAU,IATd,gD,+EAaA,WAAc,IAAD,OACX,EAAgCS,KAAKZ,MAA7BC,EAAR,EAAQA,UAGR,OAHA,EAAmBE,SAIjB,cAAC,IAAD,CAAUY,GAAG,YAEb,sBAAK,cAAY,aAAavC,UAAU,iBAAxC,UACE,qBAAKwC,IAAKC,EAAMC,IAAI,eACpB,uBAAMC,aAAa,MAAM3C,UAAU,YAAnC,UACE,uBAAO4C,QAAQ,cACf,uBACEC,KAAK,OACLV,MAAOV,EACPqB,SAAUV,KAAKR,aACf,cAAY,mBACZM,GAAG,YACHa,YAAY,OACZC,WAAY,SAAChB,GACO,UAAdA,EAAMiB,KACR,EAAKnB,UAAU,CAAEX,KAAMM,OAI5BA,EAAUyB,QAtBK,EAuBd,wBACE,cAAY,sBACZC,QAAS,kBAAM,EAAKrB,UAAU,CAAEX,KAAMM,KACtCoB,KAAK,SAHP,oBAQA,wBAAQA,KAAK,SAAS,cAAY,sBAAsBO,UAAQ,EAAhE,4B,oBASV,WAGE,OAFoBhB,KAAKZ,MAAjBE,QAES,cAAC,EAAD,IAAcU,KAAKL,iB,GAhFL9B,aCDdoD,E,kDACnB,aAAe,IAAD,8BACZ,gBAEK7B,MAAQ,CACXpB,KAAM,GACNsB,SAAS,GAGX,EAAK4B,WAAa,EAAKA,WAAWzB,KAAhB,gBARN,E,qDAWd,WACEO,KAAKkB,e,+DAGP,4BAAAhB,EAAA,sEACqBzB,IADrB,OACQT,EADR,OAGEgC,KAAKC,SAAS,CACZjC,OACAsB,SAAS,IALb,gD,0EASA,WACE,MAA0BU,KAAKZ,MAAvBE,EAAR,EAAQA,QACAP,EADR,EAAiBf,KACTe,KACR,OAAOO,EACL,cAAC,EAAD,IAEA,yBAAQ,cAAY,mBAApB,UACE,cAAC,IAAD,CAAMa,GAAG,UAAU,cAAY,iBAAiBvC,UAAU,cAA1D,oBAGA,cAAC,IAAD,CACEuC,GAAG,aACH,cAAY,oBACZvC,UAAU,cAHZ,uBAOA,cAAC,IAAD,CACEuC,GAAG,WACH,cAAY,kBACZvC,UAAU,cAHZ,qBAOA,cAAC,IAAD,CAAMuC,GAAG,WAAWvC,UAAU,gBAA9B,SACGmB,W,GAlDyBlB,aC4BrBsD,EAjCM,uCAAG,WAAOC,GAAP,yBAAAlB,EAAA,6DAChBmB,EAAgBC,UAAUF,GAAQG,WAAW,MAAO,KAEpDC,EAHgB,4DAGoDH,EAHpD,qCAKII,MAAMD,GALV,cAKhBE,EALgB,gBAOIA,EAAYC,OAPhB,uBAOdC,EAPc,EAOdA,QAEFtD,EAAWsD,EAAQC,KACvB,kBASO,CACLC,SAVF,EACEA,SAUAC,WAXF,EAEEA,WAUAC,aAZF,EAGEA,aAUAC,eAbF,EAIEA,eAUAC,gBAdF,EAKEA,gBAUAC,cAfF,EAMEA,cAUAC,YAhBF,EAOEA,YAUAC,WAjBF,EAQEA,eAlBkB,kBA8Bf/D,GA9Be,4CAAH,sDCMAgE,E,kDACnB,aAAe,IAAD,8BACZ,gBAEKlD,MAAQ,CACXmD,YAAa,GACbC,cAAe,GACfC,kBAAcC,EACdC,WAAW,EACXrD,SAAS,GAGX,EAAKE,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKmD,YAAc,EAAKA,YAAYnD,KAAjB,gBACnB,EAAKoD,YAAc,EAAKA,YAAYpD,KAAjB,gBAbP,E,gDAgBd,SAAaG,GACX,MAAsBA,EAAMC,OAApBC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,MACZC,KAAKC,SAAL,eACGH,EAAKC,M,gEAIV,gCAAAG,EAAA,6DACUqC,EAAgBvC,KAAKZ,MAArBmD,YACFO,EAAQP,EAEdvC,KAAKC,SAAS,CACZsC,YAAa,GACbC,cAAeM,EACfxD,SAAS,IAPb,SAU6B6B,EAAgB2B,GAV7C,OAUQL,EAVR,OAYEzC,KAAKC,SAAS,CACZwC,eACAnD,SAAS,EACTqD,WAAW,IAff,gD,+EAmBA,WACE,MAAwC3C,KAAKZ,MAArCqD,EAAR,EAAQA,aAAcD,EAAtB,EAAsBA,cAChBO,EAAS,oCAA6BP,EAA7B,KAEf,OAAOC,EAAa3B,OAAS,EAC3B,sBAAKlD,UAAU,yBAAf,UACE,4BAAImF,IACJ,qBAAKnF,UAAU,gBAAf,SACG6E,EAAaZ,KAAI,SAACiB,GAAD,OAChB,sBAAKlF,UAAU,eAAf,UACE,qBAAKwC,IAAK0C,EAAMX,gBAChB,sBAAKvE,UAAU,cAAf,UACE,cAAC,IAAD,CACEuC,GAAE,iBAAY2C,EAAMd,cACpB,sCAA8Bc,EAAMd,cAEpCpE,UAAU,OAJZ,SAMGkF,EAAMb,gBAHFa,EAAMd,cAKb,4BAAIc,EAAMf,aACV,iCAAQ,cAAC,IAAD,CACN5B,GAAE,iBAAY2C,EAAMd,cACpB,sCAA8Bc,EAAMd,cAEpCpE,UAAU,YAJJ,kBAGDkF,EAAMd,8BAWvB,mC,oBAIJ,WAAU,IAAD,OACP,EAA4ChC,KAAKZ,MAAzCmD,EAAR,EAAQA,YAAajD,EAArB,EAAqBA,QAASqD,EAA9B,EAA8BA,UAC9B,OACE,sBAAK,cAAY,cAAjB,UACE,cAAC,EAAD,IACCrD,EACC,cAAC,EAAD,IAEA,qBAAK1B,UAAU,cAAf,SACE,uBAAM2C,aAAa,MAAnB,UACE,uBACEE,KAAK,OACL,cAAY,sBACZC,SAAUV,KAAKR,aACfO,MAAOwC,EACPzC,GAAG,cACHc,WAAY,SAAChB,GACO,UAAdA,EAAMiB,KACR,EAAK+B,eAGTjC,YAAY,sCAEb4B,EAAYzB,QAAU,EACrB,wBACE,cAAY,uBACZC,QAASf,KAAK4C,YACdnC,KAAK,SAHP,uBAQA,wBACE,cAAY,uBACZO,UAAQ,EACRP,KAAK,SAHP,4BAWPkC,EAAY3C,KAAK6C,cAAgB,Y,GA7HNhF,a,QCN9BmF,EAAqB,iBAItB7E,KAAKS,MAAMX,aAAaY,QAAQmE,KACnC/E,aAAaC,QAAQ8E,EAAoB7E,KAAKC,UAAU,KAE1D,IAAM6E,EAAoB,kBAAM9E,KAAKS,MAAMX,aAAaY,QAAQmE,KAE1DE,EAAoB,SAACC,GAAD,OAAmBlF,aAC1CC,QAAQ8E,EAAoB7E,KAAKC,UAAU+E,KASxC9E,EAAkB,SAACC,GAAD,OAAc,SAACC,GACrCC,YAAW,WACTD,EAASD,KApBG,OAwBH8E,EAAmB,kBAAM,IAAI1E,SAAQ,SAACC,GACjD,IAAMwE,EAAgBF,IACtB5E,EAAgB8E,EAAhB9E,CAA+BM,OAGpB0E,EAAU,SAACC,GAAD,OAAU,IAAI5E,SAAQ,SAACC,GAC5C,GAAI2E,EAAM,CACR,IAAMH,EAAgBF,IACtBC,EAAkB,GAAD,mBAAKC,GAAL,CAAoBG,KAEvCjF,EAjCqB,KAiCrBA,CAAgCM,OAGrB4E,EAAa,SAACD,GAAD,OAAU,IAAI5E,SAAQ,SAACC,GAC/C,IAAMwE,EAAgBF,IACtBC,EAAkBC,EAAcK,QAAO,SAACC,GAAD,OAAOA,EAAEC,UAAYJ,EAAKI,YACjErF,EAvCqB,KAuCrBA,CAAgCM,OC/BbgF,E,kDACnB,aAAe,IAAD,8BACZ,gBACKvE,MAAQ,CACXE,SAAS,EACTsE,UAAW,IAGb,EAAKC,YAAc,EAAKA,YAAYpE,KAAjB,gBACnB,EAAKqE,aAAe,EAAKA,aAAarE,KAAlB,gBACpB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBATN,E,qDAYd,WACEO,KAAK8D,iB,gEAGP,WAAkBlE,GAAlB,uBAAAM,EAAA,yDACU6D,EAAYnE,EAAMC,OAAlBkE,QADV,EAEqC/D,KAAKgE,MAAhCC,EAFV,EAEUA,MAAOC,EAFjB,EAEiBA,gBAEflE,KAAKC,SAAS,CACZX,SAAS,KAGPyE,EARN,gCASUV,EAAQY,GATlB,8BAWIV,EAAWU,QACavB,IAApBwB,GACFA,IAbN,yBAiB0Bd,IAjB1B,QAiBQQ,EAjBR,OAmBE5D,KAAKC,SAAS,CACZX,SAAS,EACTsE,cArBJ,iD,wHAyBA,4BAAA1D,EAAA,sEAC0BkD,IAD1B,OACQQ,EADR,OAEE5D,KAAKC,SAAS,CACZ2D,cAHJ,gD,8EAOA,WACE,IAAQK,EAAUjE,KAAKgE,MAAfC,MACAE,EAAmCF,EAAnCE,UAAWC,EAAwBH,EAAxBG,WAAYV,EAAYO,EAAZP,QAC/B,EAA+B1D,KAAKZ,MAA5BwE,EAAR,EAAQA,UAAWtE,EAAnB,EAAmBA,QAEnB,YAAmBoD,IAAf0B,EAEA,sBAAKxG,UAAU,QAAf,UACE,4BAAIuG,IACJ,wBAAO,cAAY,kBAAkB/D,IAAKgE,EAAYC,UAAQ,EAA9D,UACE,uBAAOC,KAAK,aADd,4CACkE,IAChE,4CAEF,wBAAO9D,QAASkD,EAAhB,qBAEE,uBACEjD,KAAK,WACL,uCAA+BiD,GAC/BhD,SAAUV,KAAK6D,YACfE,QAASH,EAAUW,MAAK,SAACjB,GAAD,OAAUA,EAAKI,UAAYA,KACnD5D,GAAI4D,OAGPpE,EAAU,cAAC,EAAD,CAASkF,YAAY,SAAY,QAI3C,O,oBAGT,WACE,IAAQP,EAAUjE,KAAKgE,MAAfC,MAIR,GAF2CA,EAAnCE,UAAmCF,EAAxBG,WAAwBH,EAAZP,QAEA1D,KAAKZ,OAApC,EAAQwE,UAAR,EAAmBtE,QACnB,OAAOU,KAAKL,iB,GArFuB9B,aA8FvC8F,EAAUc,aAAe,CACvBP,qBAAiBxB,GCzGnB,IAMegC,EANA,uCAAG,WAAO5E,GAAP,iBAAAI,EAAA,sEACMuB,MAAM,sCAAD,OAAuC3B,EAAvC,iBADX,cACV6E,EADU,gBAEUA,EAAQhD,OAFlB,cAEViD,EAFU,yBAGTA,EAAYhD,SAHH,2CAAH,sDCQMiD,E,kDACnB,aAAe,IAAD,8BACZ,gBAEKzF,MAAQ,CACX0F,YAAQpC,EACRpD,SAAS,EACT6D,cAAe,IAEjB,EAAK4B,WAAa,EAAKA,WAAWtF,KAAhB,gBAClB,EAAKuF,aAAe,EAAKA,aAAavF,KAAlB,gBATR,E,4FAYd,sBAAAS,EAAA,sEACQF,KAAKiF,YADb,gD,oHAIA,oCAAA/E,EAAA,6DACUgF,EAAUlF,KAAKgE,MAAfkB,MACAC,EAAWD,EAAXC,OACArF,EAAOqF,EAAPrF,GAHV,SAIuB4E,EAAU5E,GAJjC,cAIQgF,EAJR,OAME9E,KAAKC,SAAS,CACZ6E,WAGF9E,KAAKC,SAAS,CACZX,SAAS,IAXb,UAc0B8D,IAd1B,QAcQQ,EAdR,OAgBE5D,KAAKC,SAAS,CACZkD,cAAeS,EACftE,SAAS,IAlBb,iD,8EAsBA,SAAWoE,GACT,IAAQP,EAAkBnD,KAAKZ,MAAvB+D,cACR,QAAOA,GACHA,EAAcoB,MAAK,SAACN,GAAD,OAAWA,EAAMP,UAAYA,O,0BAItD,WAIE,IAHA,MAAkC1D,KAAKZ,MAA/B0F,EAAR,EAAQA,OAAQ3B,EAAhB,EAAgBA,cACZiC,EAAQ,GAEHC,EAAQ,EAAGA,EAAQP,EAAOhE,OAAQuE,IACzCD,EAAME,KACJ,8BACE,cAAC,EAAD,CACErB,MAAOa,EAAOO,GACdzB,UAAWT,GACN2B,EAAOO,GAAO3B,YAK3B,OAAO0B,I,oBAGT,WACE,MAA4BpF,KAAKZ,MAAzB0F,EAAR,EAAQA,OAAQxF,EAAhB,EAAgBA,QAEhB,OACE,sBAAK,cAAY,aAAjB,UACE,cAAC,EAAD,SACYoD,IAAXoC,EACC,sBAAKlH,UAAU,QAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBACEwC,IAAK,UAAG0E,EAAO,GAAG3C,eAAgBoD,QAChC,gBACA,mBAGJ,mBAAG,cAAY,aAAa3H,UAAU,YAAtC,SACGkH,EAAO,GAAG7C,iBAEb,mBAAG,cAAY,cAAcrE,UAAU,aAAvC,SACGkH,EAAO,GAAG/C,gBAGf,qBAAKnE,UAAU,kBAAf,SACE,qBAAKA,UAAU,SAAf,SAAyBoC,KAAKgF,mBAE/B1F,EAAU,cAAC,EAAD,IAAc,QAEzB,Y,GA3FuBzB,aCFd2H,E,kDACnB,aAAe,IAAD,8BACZ,gBAEKpG,MAAQ,CACX+D,cAAe,GACf7D,aAASoD,GAGX,EAAK+C,kBAAoB,EAAKA,kBAAkBhG,KAAvB,gBACzB,EAAKyE,gBAAkB,EAAKA,gBAAgBzE,KAArB,gBATX,E,qDAYd,WACEO,KAAKyF,sB,sEAGP,4BAAAvF,EAAA,6DACEF,KAAKC,SAAS,CACZX,SAAS,IAFb,SAK8B8D,IAL9B,OAKQD,EALR,OAOEnD,KAAKC,SAAS,CACZkD,gBACA7D,SAAS,IATb,gD,0HAaA,4BAAAY,EAAA,sEAC0BkD,IAD1B,OACQQ,EADR,OAEE5D,KAAKC,SAAS,CACZkD,cAAeS,IAHnB,gD,0EAOA,WAAU,IAAD,OACP,EAAmC5D,KAAKZ,MAAhC+D,EAAR,EAAQA,cAAe7D,EAAvB,EAAuBA,QACvB,OACE,sBAAK,cAAY,iBAAjB,UACE,cAAC,EAAD,IACCA,EACC,cAAC,EAAD,IAEA,sBAAK1B,UAAU,YAAf,UACE,0CACCuF,EAActB,KAAI,SAACyB,GAAD,OACjB,cAAC,EAAD,CACEW,MAAOX,EACPY,gBAAiB,EAAKA,iBACjBZ,EAAKI,sB,GAnDa7F,aCAlB6H,E,kDACnB,aAAe,IAAD,8BACZ,gBAEKtG,MAAQ,CACXuG,QAAS,GACTrG,SAAS,GAGX,EAAKsG,YAAc,EAAKA,YAAYnG,KAAjB,gBARP,E,qDAWd,WACEO,KAAK4F,gB,gEAGP,4BAAA1F,EAAA,6DACEF,KAAKC,SAAS,CACZX,SAAS,IAFb,SAKwBb,IALxB,OAKQkH,EALR,OAME3F,KAAKC,SAAS,CACZ0F,YAGF3F,KAAKC,SAAS,CACZX,SAAS,IAXb,gD,0EAeA,WACE,MAA6BU,KAAKZ,MAA1BE,EAAR,EAAQA,QAASqG,EAAjB,EAAiBA,QAEjB,OACE,sBAAK,cAAY,eAAjB,UACE,cAAC,EAAD,IACCrG,EACC,cAAC,EAAD,IAEA,sBAAK1B,UAAU,cAAf,UACG+H,EAAQ1G,MACP,qBACEmB,IAAKuF,EAAQ1G,MACb,cAAY,gBACZqB,IAAI,YAGN,qBACEF,IAAI,yHACJ,cAAY,gBACZE,IAAI,YAIR,mBAAG1C,UAAU,cAAb,SAA4B+H,EAAQ5G,OACpC,mBAAGnB,UAAU,eAAb,SAA6B+H,EAAQ3G,QACrC,mBAAGpB,UAAU,qBAAb,SAAmC+H,EAAQzG,cAC3C,cAAC,IAAD,CAAMiB,GAAG,gBAAgBvC,UAAU,OAAnC,qC,GA1DyBC,aCAhBgI,E,kDACnB,aAAe,IAAD,8BACZ,gBAEKzG,MAAQ,CACXE,SAAS,EACTqG,QAAS,GACTpG,UAAU,GAGZ,EAAKqG,YAAc,EAAKA,YAAYnG,KAAjB,gBACnB,EAAKqG,iBAAmB,EAAKA,iBAAiBrG,KAAtB,gBACxB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKsG,kBAAoB,EAAKA,kBAAkBtG,KAAvB,gBAZb,E,qDAed,WACEO,KAAK4F,gB,0BAGP,SAAahG,GACX,IAAQ+F,EAAY3F,KAAKZ,MAAjBuG,QAER,EAAsB/F,EAAMC,OAApBE,EAAR,EAAQA,MAAOD,EAAf,EAAeA,GACfE,KAAKC,SAAS,CACZ0F,QAAQ,2BAAMA,GAAP,kBAAiB7F,EAAKC,Q,8BAIjC,WACE,IAAQ4F,EAAY3F,KAAKZ,MAAjBuG,QACJK,GAAS,EACPhH,EAAQiH,OAAOC,OAAOP,GAAS,GASrC,OARAK,EAASC,OAAOC,OAAOP,GAASQ,OAAM,SAACpG,GAAD,OAAWA,EAAMe,OAAS,UAElD4B,IAAV1D,IAEAgH,KADEhH,EAAMoH,SAAS,OAAQpH,EAAMoH,SAAS,UAKrCJ,I,gEAGT,4BAAA9F,EAAA,6DACEF,KAAKC,SAAS,CACZX,SAAS,IAFb,SAKwBb,IALxB,OAKQkH,EALR,OAME3F,KAAKC,SAAS,CACZ0F,UACArG,SAAS,IARb,gD,qFAYA,WACE,IZxBuB+G,EYwBfV,EAAY3F,KAAKZ,MAAjBuG,QZxBeU,EYyBZV,EZzB4B,IAAIjH,SAAQ,SAACC,GACtDZ,EAAS,eAAKsI,IACdhI,EAvCqB,KAuCrBA,CAAgCM,MYyB9BqB,KAAKC,SAAS,CACZV,UAAU,M,oBAId,WACE,MAAuCS,KAAKZ,MAApCE,EAAR,EAAQA,QAASqG,EAAjB,EAAiBA,QAASpG,EAA1B,EAA0BA,SAE1B,OACE,sBAAK,cAAY,oBAAjB,UACE,cAAC,EAAD,IACCD,EACC,cAAC,EAAD,IAEA,qBAAK1B,UAAU,cAAf,SACE,uBAAM2C,aAAa,MAAnB,UACE,kCACE,sCACA,uBACEE,KAAK,OACL,cAAY,kBACZC,SAAUV,KAAKR,aACfO,MAAO4F,EAAQ5G,KACfe,GAAG,YAGP,kCACE,uCACA,uBACEW,KAAK,QACL,cAAY,mBACZC,SAAUV,KAAKR,aACfO,MAAO4F,EAAQ3G,MACfc,GAAG,aAIP,kCACE,iDACA,0BACEW,KAAK,OACL,cAAY,yBACZC,SAAUV,KAAKR,aACfO,MAAO4F,EAAQzG,YACfY,GAAG,mBAGP,kCACE,wCACA,uBACEW,KAAK,OACL,cAAY,mBACZC,SAAUV,KAAKR,aACfO,MAAO4F,EAAQ1G,MACfa,GAAG,QACHa,YAAY,sBAGfX,KAAK8F,mBACJ,wBACErF,KAAK,SACL,cAAY,mBACZM,QAASf,KAAK+F,kBAHhB,oBAQA,wBAAQtF,KAAK,SAAS,cAAY,mBAAmBO,UAAQ,EAA7D,yBAOPzB,EAAW,cAAC,IAAD,CAAUY,GAAG,aAAgB,Y,GAtIRtC,aCJpByI,E,4JACnB,WACE,OAAO,qBAAK,cAAY,uB,GAFUzI,aC2BvB0I,G,kKAjBb,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAS,kBAAM,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOD,KAAK,UAAUC,OAAS,kBAAM,cAAC,EAAD,OACrC,cAAC,IAAD,CAAOD,KAAK,aAAaC,OAAS,SAAC1C,GAAD,OAAW,cAAC,EAAD,eAAYA,OACzD,cAAC,IAAD,CAAOyC,KAAK,aAAaC,OAAS,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,OAAS,kBAAM,cAAC,EAAD,OAC3C,cAAC,IAAD,CAAOD,KAAK,WAAWC,OAAS,kBAAM,cAAC,EAAD,OACtC,cAAC,IAAD,CAAOD,KAAK,IAAIC,OAAS,kBAAM,cAAC,EAAD,gB,GAXvBC,IAAM9I,YCNxB+I,IAASF,OACP,cAAC,IAAMG,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.07ad04d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Loading extends Component {\n  render() {\n    return <div className=\"loading\"><p>Carregando... 🎶</p></div>;\n  }\n}\n","const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","export default __webpack_public_path__ + \"static/media/login.12a59944.png\";","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Loading from '../components/Loading';\nimport { createUser } from '../services/userAPI';\nimport logo from '../login.png';\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      inputName: '',\n      loading: false,\n      redirect: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onLoading = this.onLoading.bind(this);\n    this.renderPage = this.renderPage.bind(this);\n  }\n\n  handleChange(event) {\n    const { id, value } = event.target;\n    this.setState({\n      [id]: value,\n    });\n  }\n\n  async onLoading(inputName) {\n    this.setState({\n      loading: true,\n    });\n\n    await createUser(inputName);\n\n    this.setState({\n      loading: false,\n      redirect: true,\n    });\n  }\n\n  renderPage() {\n    const { inputName, redirect } = this.state;\n    const minimumLength = 3;\n\n    return redirect ? (\n      <Redirect to=\"/search\" />\n    ) : (\n      <div data-testid=\"page-login\" className=\"loginContainer\">\n        <img src={logo} alt=\"trybe-logo\" />\n        <form autoComplete=\"off\" className=\"loginForm\">\n          <label htmlFor=\"inputName\"></label>\n          <input\n            type=\"text\"\n            value={inputName}\n            onChange={this.handleChange}\n            data-testid=\"login-name-input\"\n            id=\"inputName\"\n            placeholder=\"Nome\"\n            onKeyPress={(event) => {\n              if (event.key === 'Enter') {\n                this.onLoading({ name: inputName });\n              }\n            }}\n          />\n          {inputName.length >= minimumLength ? (\n            <button\n              data-testid=\"login-submit-button\"\n              onClick={() => this.onLoading({ name: inputName })}\n              type=\"button\"\n            >\n              Entrar\n            </button>\n          ) : (\n            <button type=\"submit\" data-testid=\"login-submit-button\" disabled>\n              Entrar\n            </button>\n          )}\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    const { loading } = this.state;\n\n    return loading ? <Loading /> : this.renderPage();\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\n\nexport default class Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      user: {},\n      loading: true,\n    };\n\n    this.renderUser = this.renderUser.bind(this);\n  }\n\n  componentDidMount() {\n    this.renderUser();\n  }\n\n  async renderUser() {\n    const user = await getUser();\n\n    this.setState({\n      user,\n      loading: false,\n    });\n  }\n\n  render() {\n    const { loading, user } = this.state;\n    const { name } = user;\n    return loading ? (\n      <Loading />\n    ) : (\n      <header data-testid=\"header-component\">\n        <Link to=\"/search\" data-testid=\"link-to-search\" className=\"headerLinks\">\n          Search\n        </Link>\n        <Link\n          to=\"/favorites\"\n          data-testid=\"link-to-favorites\"\n          className=\"headerLinks\"\n        >\n          Favorites\n        </Link>\n        <Link\n          to=\"/profile\"\n          data-testid=\"link-to-profile\"\n          className=\"headerLinks\"\n        >\n          Profile\n        </Link>\n        <Link to=\"/profile\" className=\"profileButton\">\n          {name}\n        </Link>\n\n        {/* <button data-testid=\"header-user-name\">{name}</button> */}\n      </header>\n    );\n  }\n}\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\n\nexport default class Search extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      inputSearch: '',\n      currentSearch: '',\n      searchResult: undefined,\n      pesquisou: false,\n      loading: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.searchAlbum = this.searchAlbum.bind(this);\n    this.renderAlbum = this.renderAlbum.bind(this);\n  }\n\n  handleChange(event) {\n    const { id, value } = event.target;\n    this.setState({\n      [id]: value,\n    });\n  }\n\n  async searchAlbum() {\n    const { inputSearch } = this.state;\n    const album = inputSearch;\n\n    this.setState({\n      inputSearch: '',\n      currentSearch: album,\n      loading: true,\n    });\n\n    const searchResult = await searchAlbumsAPI(album);\n\n    this.setState({\n      searchResult,\n      loading: false,\n      pesquisou: true,\n    });\n  }\n\n  renderAlbum() {\n    const { searchResult, currentSearch } = this.state;\n    const albumName = `Estes são os albuns de ${currentSearch}:`;\n\n    return searchResult.length > 0 ? (\n      <div className=\"containerSearchResults\">\n        <p>{albumName}</p>\n        <div className=\"searchResults\">\n          {searchResult.map((album) => (\n            <div className=\"searchResult\">\n              <img src={album.artworkUrl100} />\n              <div className=\"linkAndName\">\n                <Link\n                  to={`/album/${album.collectionId}`}\n                  data-testid={`link-to-album-${album.collectionId}`}\n                  key={album.collectionId}\n                  className=\"link\"\n                >\n                  {album.collectionName}\n                </Link>\n                <p>{album.artistName}</p>\n                <button><Link\n                  to={`/album/${album.collectionId}`}\n                  data-testid={`link-to-album-${album.collectionId}`}\n                  key={album.collectionId}\n                  className=\"linkOuvir\"\n                >\n                  Ouvir\n                </Link></button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    ) : (\n      'Nenhum álbum foi encontrado'\n    );\n  }\n\n  render() {\n    const { inputSearch, loading, pesquisou } = this.state;\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        {loading ? (\n          <Loading />\n        ) : (\n          <div className=\"inputSearch\">\n            <form autoComplete=\"off\">\n              <input\n                type=\"text\"\n                data-testid=\"search-artist-input\"\n                onChange={this.handleChange}\n                value={inputSearch}\n                id=\"inputSearch\"\n                onKeyPress={(event) => {\n                  if (event.key === 'Enter') {\n                    this.searchAlbum();\n                  }\n                }}\n                placeholder=\"Digite o nome do album ou artista\"\n              />\n              {inputSearch.length >= 2 ? (\n                <button\n                  data-testid=\"search-artist-button\"\n                  onClick={this.searchAlbum}\n                  type=\"button\"\n                >\n                  Pesquisar\n                </button>\n              ) : (\n                <button\n                  data-testid=\"search-artist-button\"\n                  disabled\n                  type=\"button\"\n                >\n                  Pesquisar\n                </button>\n              )}\n            </form>\n          </div>\n        )}\n        {pesquisou ? this.renderAlbum() : null}\n      </div>\n    );\n  }\n}\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  addSong,\n  removeSong,\n  getFavoriteSongs,\n} from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nexport default class MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      favorites: [],\n    };\n\n    this.handleCange = this.handleCange.bind(this);\n    this.setFavorites = this.setFavorites.bind(this);\n    this.renderPage = this.renderPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.setFavorites();\n  }\n\n  async handleCange(event) {\n    const { checked } = event.target;\n    const { music, updateFavorites } = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    if (checked) {\n      await addSong(music);\n    } else {\n      removeSong(music);\n      if (updateFavorites !== undefined) {\n        updateFavorites();\n      }\n    }\n\n    const favorites = await getFavoriteSongs();\n\n    this.setState({\n      loading: false,\n      favorites,\n    });\n  }\n\n  async setFavorites() {\n    const favorites = await getFavoriteSongs();\n    this.setState({\n      favorites,\n    });\n  }\n\n  renderPage() {\n    const { music } = this.props;\n    const { trackName, previewUrl, trackId } = music;\n    const { favorites, loading } = this.state;\n\n    if (previewUrl !== undefined) {\n      return (\n        <div className=\"music\">\n          <p>{trackName}</p>\n          <audio data-testid=\"audio-component\" src={previewUrl} controls>\n            <track kind=\"captions\" />O seu navegador não suporta o elemento{' '}\n            <code>audio</code>\n          </audio>\n          <label htmlFor={trackId}>\n            Favorita\n            <input\n              type=\"checkbox\"\n              data-testid={`checkbox-music-${trackId}`}\n              onChange={this.handleCange}\n              checked={favorites.some((song) => song.trackId === trackId)}\n              id={trackId}\n            />\n          </label>\n          {loading ? <Loading byFavorites=\"true\" /> : null}\n        </div>\n      );\n    }\n    return null\n  }\n\n  render() {\n    const { music } = this.props;\n\n    const { trackName, previewUrl, trackId } = music;\n\n    const { favorites, loading } = this.state;\n    return this.renderPage();\n  }\n}\n\nMusicCard.propTypes = {\n  music: PropTypes.arrayOf(Object).isRequired,\n  updateFavorites: PropTypes.func,\n};\n\nMusicCard.defaultProps = {\n  updateFavorites: undefined,\n};\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../components/Loading';\n\nexport default class Album extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      musics: undefined,\n      loading: false,\n      favoriteSongs: [],\n    };\n    this.isFavorite = this.isFavorite.bind(this);\n    this.renderMusics = this.renderMusics.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.setStates();\n  }\n\n  async setStates() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n    const musics = await getMusics(id);\n\n    this.setState({\n      musics,\n    });\n\n    this.setState({\n      loading: true,\n    });\n\n    const favorites = await getFavoriteSongs();\n\n    this.setState({\n      favoriteSongs: favorites,\n      loading: false,\n    });\n  }\n\n  isFavorite(trackId) {\n    const { favoriteSongs } = this.state;\n    return favoriteSongs\n      ? favoriteSongs.some((music) => music.trackId === trackId)\n      : false;\n  }\n\n  renderMusics() {\n    const { musics, favoriteSongs } = this.state;\n    let array = [];\n\n    for (let index = 1; index < musics.length; index++) {\n      array.push(\n        <div>\n          <MusicCard\n            music={musics[index]}\n            favorites={favoriteSongs}\n            key={musics[index].trackId}\n          />\n        </div>\n      );\n    }\n    return array;\n  }\n\n  render() {\n    const { musics, loading } = this.state;\n\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        {musics !== undefined ? (\n          <div className=\"album\">\n            <div className=\"albumInfo\">\n              <img\n                src={`${musics[0].artworkUrl100}`.replace(\n                  '100x100bb.jpg',\n                  '500x500bb.jpg'\n                )}\n              />\n              <p data-testid=\"album-name\" className=\"albumName\">\n                {musics[0].collectionName}\n              </p>\n              <p data-testid=\"artist-name\" className=\"artistName\">\n                {musics[0].artistName}\n              </p>\n            </div>\n            <div className=\"containerMusics\">\n              <div className=\"musics\">{this.renderMusics()}</div>\n            </div>\n            {loading ? <Loading /> : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nexport default class Favorites extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      favoriteSongs: [],\n      loading: undefined,\n    };\n\n    this.loadFavoriteSongs = this.loadFavoriteSongs.bind(this);\n    this.updateFavorites = this.updateFavorites.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadFavoriteSongs();\n  }\n\n  async loadFavoriteSongs() {\n    this.setState({\n      loading: true,\n    });\n\n    const favoriteSongs = await getFavoriteSongs();\n\n    this.setState({\n      favoriteSongs,\n      loading: false,\n    });\n  }\n\n  async updateFavorites() {\n    const favorites = await getFavoriteSongs();\n    this.setState({\n      favoriteSongs: favorites,\n    });\n  }\n\n  render() {\n    const { favoriteSongs, loading } = this.state;\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        {loading ? (\n          <Loading />\n        ) : (\n          <div className=\"favoritas\">\n            <p>Favoritas</p>\n            {favoriteSongs.map((song) => (\n              <MusicCard\n                music={song}\n                updateFavorites={this.updateFavorites}\n                key={song.trackId}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser } from '../services/userAPI';\n\nexport default class Profile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      profile: [],\n      loading: false,\n    };\n\n    this.loadProfile = this.loadProfile.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadProfile();\n  }\n\n  async loadProfile() {\n    this.setState({\n      loading: true,\n    });\n\n    const profile = await getUser();\n    this.setState({\n      profile,\n    });\n\n    this.setState({\n      loading: false,\n    });\n  }\n\n  render() {\n    const { loading, profile } = this.state;\n\n    return (\n      <div data-testid=\"page-profile\">\n        <Header />\n        {loading ? (\n          <Loading />\n        ) : (\n          <div className=\"profilePage\">\n            {profile.image ? (\n              <img\n                src={profile.image}\n                data-testid=\"profile-image\"\n                alt=\"profile\"\n              />\n            ) : (\n              <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Circle-icons-profile.svg/1024px-Circle-icons-profile.svg.png\"\n                data-testid=\"profile-image\"\n                alt=\"profile\"\n              />\n            )}\n\n            <p className=\"profileName\">{profile.name}</p>\n            <p className=\"profileEmail\">{profile.email}</p>\n            <p className=\"profileDescription\">{profile.description}</p>\n            <Link to=\"/profile/edit\" className=\"Link\">\n              Editar perfil\n            </Link>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\n\nexport default class ProfileEdit extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      profile: [],\n      redirect: false,\n    };\n\n    this.loadProfile = this.loadProfile.bind(this);\n    this.buttonValidation = this.buttonValidation.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.updateAndRedirect = this.updateAndRedirect.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadProfile();\n  }\n\n  handleChange(event) {\n    const { profile } = this.state;\n\n    const { value, id } = event.target;\n    this.setState({\n      profile: { ...profile, [id]: value },\n    });\n  }\n\n  buttonValidation() {\n    const { profile } = this.state;\n    let result = false;\n    const email = Object.values(profile)[1];\n    result = Object.values(profile).every((value) => value.length > 0);\n\n    if (email !== undefined) {\n      if (email.includes('@') && email.includes('.com')) {\n        result = true;\n      } else result = false;\n    }\n\n    return result;\n  }\n\n  async loadProfile() {\n    this.setState({\n      loading: true,\n    });\n\n    const profile = await getUser();\n    this.setState({\n      profile,\n      loading: false,\n    });\n  }\n\n  updateAndRedirect() {\n    const { profile } = this.state;\n    updateUser(profile);\n\n    this.setState({\n      redirect: true,\n    });\n  }\n\n  render() {\n    const { loading, profile, redirect } = this.state;\n\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <Header />\n        {loading ? (\n          <Loading />\n        ) : (\n          <div className=\"profileEdit\">\n            <form autoComplete=\"off\">\n              <label>\n                <p>Nome:</p>\n                <input\n                  type=\"text\"\n                  data-testid=\"edit-input-name\"\n                  onChange={this.handleChange}\n                  value={profile.name}\n                  id=\"name\"\n                />\n              </label>\n              <label>\n                <p>Email:</p>\n                <input\n                  type=\"email\"\n                  data-testid=\"edit-input-email\"\n                  onChange={this.handleChange}\n                  value={profile.email}\n                  id=\"email\"\n                />\n              </label>\n\n              <label>\n                <p>Descrição:</p>\n                <textarea\n                  type=\"text\"\n                  data-testid=\"edit-input-description\"\n                  onChange={this.handleChange}\n                  value={profile.description}\n                  id=\"description\"\n                />\n              </label>\n              <label>\n                <p>Imagem:</p>\n                <input\n                  type=\"text\"\n                  data-testid=\"edit-input-image\"\n                  onChange={this.handleChange}\n                  value={profile.image}\n                  id=\"image\"\n                  placeholder='Link da Imagem'\n                />\n              </label>\n              {this.buttonValidation() ? (\n                <button\n                  type=\"button\"\n                  data-testid=\"edit-button-save\"\n                  onClick={this.updateAndRedirect}\n                >\n                  Salvar\n                </button>\n              ) : (\n                <button type=\"button\" data-testid=\"edit-button-save\" disabled>\n                  Salvar\n                </button>\n              )}\n            </form>\n          </div>\n        )}\n        {redirect ? <Redirect to=\"/profile\" /> : null}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class NotFound extends Component {\n  render() {\n    return <div data-testid=\"page-not-found\" />;\n  }\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Search from './pages/Search';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\nimport \"../src/App.css\"\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" render={ () => <Login /> } />\n          <Route path=\"/search\" render={ () => <Search /> } />\n          <Route path=\"/album/:id\" render={ (props) => <Album { ...props } /> } />\n          <Route path=\"/favorites\" render={ () => <Favorites /> } />\n          <Route path=\"/profile/edit\" render={ () => <ProfileEdit /> } />\n          <Route path=\"/profile\" render={ () => <Profile /> } />\n          <Route path=\"*\" render={ () => <NotFound /> } />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}