{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/\\xC1rea de Trabalho/Trybe/projects/sd-016-b-project-trybetunes/src/components/MusicCard.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      favorites: []\n    };\n    this.handleCange = this.handleCange.bind(this);\n    this.setFavorites = this.setFavorites.bind(this);\n  }\n\n  componentDidMount() {\n    this.setFavorites();\n  }\n\n  async handleCange(event) {\n    console.log('teste');\n    const {\n      checked\n    } = event.target;\n    const {\n      music,\n      updateFavorites\n    } = this.props;\n    this.setState({\n      loading: true\n    });\n\n    if (checked) {\n      await addSong(music);\n    } else {\n      removeSong(music);\n      ifupdateFavorites !== undefined ? updateFavorites() : null;\n    }\n\n    const favorites = await getFavoriteSongs();\n    this.setState({\n      loading: false,\n      favorites\n    });\n  }\n\n  async setFavorites() {\n    const favorites = await getFavoriteSongs();\n    this.setState({\n      favorites\n    });\n  }\n\n  render() {\n    const {\n      music\n    } = this.props;\n    const {\n      trackName,\n      previewUrl,\n      trackId\n    } = music;\n    const {\n      favorites,\n      loading\n    } = this.state;\n    return previewUrl !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        \"data-testid\": \"audio-component\",\n        src: previewUrl,\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \"O seu navegador n\\xE3o suporta o elemento\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: trackId,\n        children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          \"data-testid\": `checkbox-music-${trackId}`,\n          onChange: this.handleCange,\n          checked: favorites.some(song => song.trackId === trackId),\n          id: trackId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 20\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this) : null;\n  }\n\n}\nMusicCard.propTypes = {\n  music: PropTypes.arrayOf(Object).isRequired,\n  updateFavorites: PropTypes.func\n};\nMusicCard.defaultProps = {\n  updateFavorites: undefined\n};","map":{"version":3,"sources":["/home/leonardo/Área de Trabalho/Trybe/projects/sd-016-b-project-trybetunes/src/components/MusicCard.jsx"],"names":["React","Component","PropTypes","addSong","removeSong","getFavoriteSongs","Loading","MusicCard","constructor","state","loading","favorites","handleCange","bind","setFavorites","componentDidMount","event","console","log","checked","target","music","updateFavorites","props","setState","ifupdateFavorites","undefined","render","trackName","previewUrl","trackId","some","song","propTypes","arrayOf","Object","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  addSong,\n  removeSong,\n  getFavoriteSongs,\n} from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nexport default class MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      favorites: [],\n    };\n\n    this.handleCange = this.handleCange.bind(this);\n    this.setFavorites = this.setFavorites.bind(this);\n  }\n\n  componentDidMount() {\n    this.setFavorites();\n  }\n\n  async handleCange(event) {\n    console.log('teste');\n    const { checked } = event.target;\n    const { music, updateFavorites } = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    if (checked) {\n      await addSong(music);\n    } else {\n      removeSong(music);\n      ifupdateFavorites !== undefined ? updateFavorites() : null;\n    }\n\n    const favorites = await getFavoriteSongs();\n\n    this.setState({\n      loading: false,\n      favorites,\n    });\n  }\n\n  async setFavorites() {\n    const favorites = await getFavoriteSongs();\n    this.setState({\n      favorites,\n    });\n  }\n\n  render() {\n    const { music } = this.props;\n\n    const { trackName, previewUrl, trackId } = music;\n\n    const { favorites, loading } = this.state;\n    return previewUrl !== undefined ? (\n      <div>\n        <p>{trackName}</p>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          O seu navegador não suporta o elemento\n          {' '}\n          <code>audio</code>\n        </audio>\n        <label htmlFor={ trackId }>\n          Favorita\n          <input\n            type=\"checkbox\"\n            data-testid={ `checkbox-music-${trackId}` }\n            onChange={ this.handleCange }\n            checked={ favorites.some((song) => song.trackId === trackId) }\n            id={ trackId }\n          />\n        </label>\n\n        {loading ? <Loading /> : null}\n      </div>\n    ) : null;\n  }\n}\n\nMusicCard.propTypes = {\n  music: PropTypes.arrayOf(Object).isRequired,\n  updateFavorites: PropTypes.func,\n};\n\nMusicCard.defaultProps = {\n  updateFavorites: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}