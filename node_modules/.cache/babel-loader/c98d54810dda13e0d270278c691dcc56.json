{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/\\xC1rea de Trabalho/Repositorios/sd-016-b-project-trybetunes/src/pages/Album.jsx\";\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Album extends Component {\n  constructor() {\n    super();\n    this.state = {\n      musics: undefined,\n      loading: false,\n      favoriteSongs: []\n    };\n    this.isFavorite = this.isFavorite.bind(this); // this.setMusics = this.setMusics.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.setStates();\n  }\n\n  async setStates() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    const {\n      id\n    } = params;\n    const musics = await getMusics(id);\n    this.setState({\n      musics\n    });\n    this.setState({\n      loading: true\n    });\n    const favorites = await getFavoriteSongs();\n    this.setState({\n      favoriteSongs: favorites,\n      loading: false\n    });\n  }\n\n  isFavorite(trackId) {\n    const {\n      favoriteSongs\n    } = this.state;\n    return favoriteSongs ? favoriteSongs.some(music => music.trackId === trackId) : false;\n  }\n\n  renderMusics() {\n    for (let index = 0; index < array.length; index++) {\n      const element = array[index];\n    }\n  }\n\n  render() {\n    const {\n      musics,\n      favoriteSongs,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), musics !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"albumInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${musics[0].artworkUrl100}`.replace('100x100bb.jpg', '500x500bb.jpg')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"album-name\",\n            className: \"albumName\",\n            children: musics[0].collectionName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"artist-name\",\n            className: \"artistName\",\n            children: musics[0].artistName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"containerMusics\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"musics\",\n            children: musics.map(music => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"albumMusic\",\n              children: /*#__PURE__*/_jsxDEV(MusicCard, {\n                music: music,\n                favorites: favoriteSongs\n              }, music.trackId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 24\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nAlbum.propTypes = {\n  match: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/leonardo/Área de Trabalho/Repositorios/sd-016-b-project-trybetunes/src/pages/Album.jsx"],"names":["PropTypes","React","Component","Header","MusicCard","getMusics","getFavoriteSongs","Loading","Album","constructor","state","musics","undefined","loading","favoriteSongs","isFavorite","bind","componentDidMount","setStates","match","props","params","id","setState","favorites","trackId","some","music","renderMusics","index","array","length","element","render","artworkUrl100","replace","collectionName","artistName","map","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../components/Loading';\n\nexport default class Album extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      musics: undefined,\n      loading: false,\n      favoriteSongs: [],\n    };\n    this.isFavorite = this.isFavorite.bind(this);\n    // this.setMusics = this.setMusics.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.setStates();\n  }\n\n  async setStates() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n    const musics = await getMusics(id);\n\n    this.setState({\n      musics,\n    });\n\n    this.setState({\n      loading: true,\n    });\n\n    const favorites = await getFavoriteSongs();\n\n    this.setState({\n      favoriteSongs: favorites,\n      loading: false,\n    });\n  }\n\n  isFavorite(trackId) {\n    const { favoriteSongs } = this.state;\n    return favoriteSongs\n      ? favoriteSongs.some((music) => music.trackId === trackId)\n      : false;\n  }\n\n  renderMusics(){\n    for (let index = 0; index < array.length; index++) {\n      const element = array[index];\n      \n    }\n  }\n\n  render() {\n    const { musics, favoriteSongs, loading } = this.state;\n\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        {musics !== undefined ? (\n          <div className=\"album\">\n            <div className=\"albumInfo\">\n              <img\n                src={`${musics[0].artworkUrl100}`.replace(\n                  '100x100bb.jpg',\n                  '500x500bb.jpg'\n                )}\n              />\n              <p data-testid=\"album-name\" className=\"albumName\">\n                {musics[0].collectionName}\n              </p>\n              <p data-testid=\"artist-name\" className=\"artistName\">\n                {musics[0].artistName}\n              </p>\n            </div>\n            <div className=\"containerMusics\">\n              <div className=\"musics\">\n                {musics.map((music) => (\n                  <div className=\"albumMusic\">\n                    <MusicCard\n                      music={music}\n                      favorites={favoriteSongs}\n                      key={music.trackId}\n                      />\n                      {/* <hr/> */}\n                  </div>\n                ))}\n              </div>\n            </div>\n            {loading ? <Loading /> : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}