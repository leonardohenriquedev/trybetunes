{"ast":null,"code":"const searchAlbumsAPI = async artist => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n  const APIResponse = await fetch(getAlbumsAPI);\n  const {\n    results\n  } = await APIResponse.json();\n  const response = results.map(({\n    artistId,\n    artistName,\n    collectionId,\n    collectionName,\n    collectionPrice,\n    artworkUrl100,\n    releaseDate,\n    trackCount\n  }) => ({\n    artistId,\n    artistName,\n    collectionId,\n    collectionName,\n    collectionPrice,\n    artworkUrl100,\n    releaseDate,\n    trackCount\n  }));\n  return response;\n};\n\nexport default searchAlbumsAPI;","map":{"version":3,"sources":["/home/leonardo/Área de Trabalho/Repositorios/sd-016-b-project-trybetunes/src/services/searchAlbumsAPI.js"],"names":["searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","fetch","results","json","response","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount"],"mappings":"AAAA,MAAMA,eAAe,GAAG,MAAOC,MAAP,IAAkB;AACxC,QAAMC,aAAa,GAAGC,SAAS,CAACF,MAAD,CAAT,CAAkBG,UAAlB,CAA6B,KAA7B,EAAoC,GAApC,CAAtB;AAEA,QAAMC,YAAY,GAAI,qDAAoDH,aAAc,0BAAxF;AAEA,QAAMI,WAAW,GAAG,MAAMC,KAAK,CAACF,YAAD,CAA/B;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAc,MAAMF,WAAW,CAACG,IAAZ,EAA1B;AAEA,QAAMC,QAAQ,GAAGF,OAAO,CAACG,GAAR,CACf,CAAC;AACCC,IAAAA,QADD;AAECC,IAAAA,UAFD;AAGCC,IAAAA,YAHD;AAICC,IAAAA,cAJD;AAKCC,IAAAA,eALD;AAMCC,IAAAA,aAND;AAOCC,IAAAA,WAPD;AAQCC,IAAAA;AARD,GAAD,MASO;AACLP,IAAAA,QADK;AAELC,IAAAA,UAFK;AAGLC,IAAAA,YAHK;AAILC,IAAAA,cAJK;AAKLC,IAAAA,eALK;AAMLC,IAAAA,aANK;AAOLC,IAAAA,WAPK;AAQLC,IAAAA;AARK,GATP,CADe,CAAjB;AAqBA,SAAOT,QAAP;AACD,CA/BD;;AAiCA,eAAeV,eAAf","sourcesContent":["const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n"]},"metadata":{},"sourceType":"module"}