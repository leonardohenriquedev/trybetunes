{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/\\xC1rea de Trabalho/Repositorios/sd-016-b-project-trybetunes/src/pages/Login.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Loading from '../components/Loading';\nimport { createUser } from '../services/userAPI';\nimport logo from '../login.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      inputName: '',\n      loading: false,\n      redirect: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onLoading = this.onLoading.bind(this);\n    this.renderPage = this.renderPage.bind(this);\n  }\n\n  handleChange(event) {\n    const {\n      id,\n      value\n    } = event.target;\n    this.setState({\n      [id]: value\n    });\n  }\n\n  async onLoading(inputName) {\n    this.setState({\n      loading: true\n    });\n    await createUser(inputName);\n    this.setState({\n      loading: false,\n      redirect: true\n    });\n  }\n\n  renderPage() {\n    const {\n      inputName,\n      redirect\n    } = this.state;\n    const minimumLength = 3;\n    return redirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-login\",\n      className: \"loginContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"trybe-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        autoComplete: \"off\",\n        className: \"loginForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"inputName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputName,\n          onChange: this.handleChange,\n          \"data-testid\": \"login-name-input\",\n          id: \"inputName\",\n          placeholder: \"Nome\",\n          onKeyPress: event => {\n            if (event.key === 'Enter') {\n              this.onLoading({\n                name: inputName\n              });\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), inputName.length >= minimumLength ? /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": \"login-submit-button\",\n          onClick: () => this.onLoading({\n            name: inputName\n          }),\n          type: \"button\",\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          \"data-testid\": \"login-submit-button\",\n          disabled: true,\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 22\n    }, this) : this.renderPage();\n  }\n\n}","map":{"version":3,"sources":["/home/leonardo/√Årea de Trabalho/Repositorios/sd-016-b-project-trybetunes/src/pages/Login.jsx"],"names":["React","Component","Redirect","Loading","createUser","logo","Login","constructor","state","inputName","loading","redirect","handleChange","bind","onLoading","renderPage","event","id","value","target","setState","minimumLength","key","name","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAEA,eAAe,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAC3CM,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE,EADA;AAEXC,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeD,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,YAAY,CAACI,KAAD,EAAQ;AAClB,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgBF,KAAK,CAACG,MAA5B;AACA,SAAKC,QAAL,CAAc;AACZ,OAACH,EAAD,GAAMC;AADM,KAAd;AAGD;;AAEc,QAATJ,SAAS,CAACL,SAAD,EAAY;AACzB,SAAKW,QAAL,CAAc;AACZV,MAAAA,OAAO,EAAE;AADG,KAAd;AAIA,UAAMN,UAAU,CAACK,SAAD,CAAhB;AAEA,SAAKW,QAAL,CAAc;AACZV,MAAAA,OAAO,EAAE,KADG;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAAd;AAID;;AAEDI,EAAAA,UAAU,GAAG;AACX,UAAM;AAAEN,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA0B,KAAKH,KAArC;AACA,UAAMa,aAAa,GAAG,CAAtB;AAEA,WAAOV,QAAQ,gBACb,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YADa,gBAGb;AAAK,qBAAY,YAAjB;AAA8B,MAAA,SAAS,EAAC,gBAAxC;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEN,IAAV;AAAgB,QAAA,GAAG,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,YAAY,EAAC,KAAnB;AAAyB,QAAA,SAAS,EAAC,WAAnC;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEI,SAFT;AAGE,UAAA,QAAQ,EAAE,KAAKG,YAHjB;AAIE,yBAAY,kBAJd;AAKE,UAAA,EAAE,EAAC,WALL;AAME,UAAA,WAAW,EAAC,MANd;AAOE,UAAA,UAAU,EAAGI,KAAD,IAAW;AACrB,gBAAIA,KAAK,CAACM,GAAN,KAAc,OAAlB,EAA2B;AACzB,mBAAKR,SAAL,CAAe;AAAES,gBAAAA,IAAI,EAAEd;AAAR,eAAf;AACD;AACF;AAXH;AAAA;AAAA;AAAA;AAAA,gBAFF,EAeGA,SAAS,CAACe,MAAV,IAAoBH,aAApB,gBACC;AACE,yBAAY,qBADd;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKP,SAAL,CAAe;AAAES,YAAAA,IAAI,EAAEd;AAAR,WAAf,CAFjB;AAGE,UAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,yBAAY,qBAAlC;AAAwD,UAAA,QAAQ,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAoCD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA;AAAF,QAAc,KAAKF,KAAzB;AAEA,WAAOE,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiB,KAAKK,UAAL,EAA/B;AACD;;AAjF0C","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Loading from '../components/Loading';\nimport { createUser } from '../services/userAPI';\nimport logo from '../login.png';\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      inputName: '',\n      loading: false,\n      redirect: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onLoading = this.onLoading.bind(this);\n    this.renderPage = this.renderPage.bind(this);\n  }\n\n  handleChange(event) {\n    const { id, value } = event.target;\n    this.setState({\n      [id]: value,\n    });\n  }\n\n  async onLoading(inputName) {\n    this.setState({\n      loading: true,\n    });\n\n    await createUser(inputName);\n\n    this.setState({\n      loading: false,\n      redirect: true,\n    });\n  }\n\n  renderPage() {\n    const { inputName, redirect } = this.state;\n    const minimumLength = 3;\n\n    return redirect ? (\n      <Redirect to=\"/search\" />\n    ) : (\n      <div data-testid=\"page-login\" className=\"loginContainer\">\n        <img src={logo} alt=\"trybe-logo\" />\n        <form autoComplete=\"off\" className=\"loginForm\">\n          <label htmlFor=\"inputName\"></label>\n          <input\n            type=\"text\"\n            value={inputName}\n            onChange={this.handleChange}\n            data-testid=\"login-name-input\"\n            id=\"inputName\"\n            placeholder=\"Nome\"\n            onKeyPress={(event) => {\n              if (event.key === 'Enter') {\n                this.onLoading({ name: inputName });\n              }\n            }}\n          />\n          {inputName.length >= minimumLength ? (\n            <button\n              data-testid=\"login-submit-button\"\n              onClick={() => this.onLoading({ name: inputName })}\n              type=\"button\"\n            >\n              Entrar\n            </button>\n          ) : (\n            <button type=\"submit\" data-testid=\"login-submit-button\" disabled>\n              Entrar\n            </button>\n          )}\n        </form>\n      </div>\n    );\n  }\n\n  render() {\n    const { loading } = this.state;\n\n    return loading ? <Loading /> : this.renderPage();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}