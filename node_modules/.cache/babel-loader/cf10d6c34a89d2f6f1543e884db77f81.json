{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/\\xC1rea de Trabalho/Repositorios/sd-016-b-project-trybetunes/src/components/MusicCard.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong, getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      favorites: []\n    };\n    this.handleCange = this.handleCange.bind(this);\n    this.setFavorites = this.setFavorites.bind(this);\n    this.renderPage = this.renderPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.setFavorites();\n  }\n\n  async handleCange(event) {\n    const {\n      checked\n    } = event.target;\n    const {\n      music,\n      updateFavorites\n    } = this.props;\n    this.setState({\n      loading: true\n    });\n\n    if (checked) {\n      await addSong(music);\n    } else {\n      removeSong(music);\n\n      if (updateFavorites !== undefined) {\n        updateFavorites();\n      }\n    }\n\n    const favorites = await getFavoriteSongs();\n    this.setState({\n      loading: false,\n      favorites\n    });\n  }\n\n  async setFavorites() {\n    const favorites = await getFavoriteSongs();\n    this.setState({\n      favorites\n    });\n  }\n\n  renderPage() {\n    const {\n      music\n    } = this.props;\n    const {\n      trackName,\n      previewUrl,\n      trackId\n    } = music;\n    const {\n      favorites,\n      loading\n    } = this.state;\n\n    if (previewUrl !== undefined) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), \"O seu navegador n\\xE3o suporta o elemento\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: trackId,\n          children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            \"data-testid\": `checkbox-music-${trackId}`,\n            onChange: this.handleCange,\n            checked: favorites.some(song => song.trackId === trackId),\n            id: trackId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {\n          favorites: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      music\n    } = this.props;\n    const {\n      trackName,\n      previewUrl,\n      trackId\n    } = music;\n    const {\n      favorites,\n      loading\n    } = this.state;\n    return this.renderPage();\n  }\n\n}\nMusicCard.propTypes = {\n  music: PropTypes.arrayOf(Object).isRequired,\n  updateFavorites: PropTypes.func\n};\nMusicCard.defaultProps = {\n  updateFavorites: undefined\n};","map":{"version":3,"sources":["/home/leonardo/Área de Trabalho/Repositorios/sd-016-b-project-trybetunes/src/components/MusicCard.jsx"],"names":["React","Component","PropTypes","addSong","removeSong","getFavoriteSongs","Loading","MusicCard","constructor","state","loading","favorites","handleCange","bind","setFavorites","renderPage","componentDidMount","event","checked","target","music","updateFavorites","props","setState","undefined","trackName","previewUrl","trackId","some","song","render","propTypes","arrayOf","Object","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  addSong,\n  removeSong,\n  getFavoriteSongs,\n} from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nexport default class MusicCard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      favorites: [],\n    };\n\n    this.handleCange = this.handleCange.bind(this);\n    this.setFavorites = this.setFavorites.bind(this);\n    this.renderPage = this.renderPage.bind(this);\n  }\n\n  componentDidMount() {\n    this.setFavorites();\n  }\n\n  async handleCange(event) {\n    const { checked } = event.target;\n    const { music, updateFavorites } = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    if (checked) {\n      await addSong(music);\n    } else {\n      removeSong(music);\n      if (updateFavorites !== undefined) {\n        updateFavorites();\n      }\n    }\n\n    const favorites = await getFavoriteSongs();\n\n    this.setState({\n      loading: false,\n      favorites,\n    });\n  }\n\n  async setFavorites() {\n    const favorites = await getFavoriteSongs();\n    this.setState({\n      favorites,\n    });\n  }\n\n  renderPage() {\n    const { music } = this.props;\n    const { trackName, previewUrl, trackId } = music;\n    const { favorites, loading } = this.state;\n\n    if (previewUrl !== undefined) {\n      return (\n        <div className=\"music\">\n          <p>{trackName}</p>\n          <audio data-testid=\"audio-component\" src={previewUrl} controls>\n            <track kind=\"captions\" />O seu navegador não suporta o elemento{' '}\n            <code>audio</code>\n          </audio>\n          <label htmlFor={trackId}>\n            Favorita\n            <input\n              type=\"checkbox\"\n              data-testid={`checkbox-music-${trackId}`}\n              onChange={this.handleCange}\n              checked={favorites.some((song) => song.trackId === trackId)}\n              id={trackId}\n            />\n          </label>\n          {loading ? <Loading favorites /> : null}\n        </div>\n      );\n    }\n    return null\n  }\n\n  render() {\n    const { music } = this.props;\n\n    const { trackName, previewUrl, trackId } = music;\n\n    const { favorites, loading } = this.state;\n    return this.renderPage();\n  }\n}\n\nMusicCard.propTypes = {\n  music: PropTypes.arrayOf(Object).isRequired,\n  updateFavorites: PropTypes.func,\n};\n\nMusicCard.defaultProps = {\n  updateFavorites: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}