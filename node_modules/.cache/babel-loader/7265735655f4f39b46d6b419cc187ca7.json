{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/\\xC1rea de Trabalho/Repositorios/sd-016-b-project-trybetunes/src/pages/ProfileEdit.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class ProfileEdit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      profile: [],\n      redirect: false\n    };\n    this.loadProfile = this.loadProfile.bind(this);\n    this.buttonValidation = this.buttonValidation.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.updateAndRedirect = this.updateAndRedirect.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadProfile();\n  }\n\n  handleChange(event) {\n    const {\n      profile\n    } = this.state;\n    const {\n      value,\n      id\n    } = event.target;\n    this.setState({\n      profile: { ...profile,\n        [id]: value\n      }\n    });\n  }\n\n  buttonValidation() {\n    const {\n      profile\n    } = this.state;\n    let result = false;\n    const email = Object.values(profile)[1];\n    result = Object.values(profile).every(value => value.length > 0);\n\n    if (email !== undefined) {\n      if (email.includes('@') && email.includes('.com')) {\n        result = true;\n      } else result = false;\n    }\n\n    return result;\n  }\n\n  async loadProfile() {\n    this.setState({\n      loading: true\n    });\n    const profile = await getUser();\n    this.setState({\n      profile,\n      loading: false\n    });\n  }\n\n  updateAndRedirect() {\n    const {\n      profile\n    } = this.state;\n    updateUser(profile);\n    this.setState({\n      redirect: true\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      profile,\n      redirect\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-profile-edit\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileEdit\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              \"data-testid\": \"edit-input-name\",\n              onChange: this.handleChange,\n              value: profile.name,\n              id: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            \"data-testid\": \"edit-input-email\",\n            onChange: this.handleChange,\n            value: profile.email,\n            id: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            \"data-testid\": \"edit-input-description\",\n            onChange: this.handleChange,\n            value: profile.description,\n            id: \"description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            \"data-testid\": \"edit-input-image\",\n            onChange: this.handleChange,\n            value: profile.image,\n            id: \"image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), this.buttonValidation() ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            \"data-testid\": \"edit-button-save\",\n            onClick: this.updateAndRedirect,\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            \"data-testid\": \"edit-button-save\",\n            disabled: true,\n            children: \"Salvar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), redirect ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/leonardo/√Årea de Trabalho/Repositorios/sd-016-b-project-trybetunes/src/pages/ProfileEdit.jsx"],"names":["React","Component","Redirect","Header","Loading","getUser","updateUser","ProfileEdit","constructor","state","loading","profile","redirect","loadProfile","bind","buttonValidation","handleChange","updateAndRedirect","componentDidMount","event","value","id","target","setState","result","email","Object","values","every","length","undefined","includes","render","name","description","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\n\nexport default class ProfileEdit extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      profile: [],\n      redirect: false,\n    };\n\n    this.loadProfile = this.loadProfile.bind(this);\n    this.buttonValidation = this.buttonValidation.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.updateAndRedirect = this.updateAndRedirect.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadProfile();\n  }\n\n  handleChange(event) {\n    const { profile } = this.state;\n\n    const { value, id } = event.target;\n    this.setState({\n      profile: { ...profile, [id]: value },\n    });\n  }\n\n  buttonValidation() {\n    const { profile } = this.state;\n    let result = false;\n    const email = Object.values(profile)[1];\n    result = Object.values(profile).every((value) => value.length > 0);\n\n    if (email !== undefined) {\n      if (email.includes('@') && email.includes('.com')) {\n        result = true;\n      } else result = false;\n    }\n\n    return result;\n  }\n\n  async loadProfile() {\n    this.setState({\n      loading: true,\n    });\n\n    const profile = await getUser();\n    this.setState({\n      profile,\n      loading: false,\n    });\n  }\n\n  updateAndRedirect() {\n    const { profile } = this.state;\n    updateUser(profile);\n\n    this.setState({\n      redirect: true,\n    });\n  }\n\n  render() {\n    const { loading, profile, redirect } = this.state;\n\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <Header />\n        {loading ? (\n          <Loading />\n        ) : (\n          <div className='profileEdit'>\n            <form autoComplete=\"off\">\n              <label>\n\n              <input\n                type=\"text\"\n                data-testid=\"edit-input-name\"\n                onChange={this.handleChange}\n                value={profile.name}\n                id=\"name\"\n              />\n\n              </label>\n\n              <input\n                type=\"email\"\n                data-testid=\"edit-input-email\"\n                onChange={this.handleChange}\n                value={profile.email}\n                id=\"email\"\n              />\n\n              <input\n                type=\"text\"\n                data-testid=\"edit-input-description\"\n                onChange={this.handleChange}\n                value={profile.description}\n                id=\"description\"\n              />\n\n              <input\n                type=\"text\"\n                data-testid=\"edit-input-image\"\n                onChange={this.handleChange}\n                value={profile.image}\n                id=\"image\"\n              />\n              {this.buttonValidation() ? (\n                <button\n                  type=\"button\"\n                  data-testid=\"edit-button-save\"\n                  onClick={this.updateAndRedirect}\n                >\n                  Salvar\n                </button>\n              ) : (\n                <button type=\"button\" data-testid=\"edit-button-save\" disabled>\n                  Salvar\n                </button>\n              )}\n            </form>\n          </div>\n        )}\n        {redirect ? <Redirect to=\"/profile\" /> : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}