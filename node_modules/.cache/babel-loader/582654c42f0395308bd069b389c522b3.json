{"ast":null,"code":"var _jsxFileName = \"/home/leonardo/\\xC1rea de Trabalho/Trybe/projects/sd-016-b-project-trybetunes/src/pages/Album.jsx\";\nimport React, { Component } from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../components/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Album extends Component {\n  constructor() {\n    super();\n    this.state = {\n      musics: undefined,\n      loading: false,\n      favorite_songs: []\n    };\n    this.isFavorite = this.isFavorite.bind(this); // this.setMusics = this.setMusics.bind(this);\n  }\n\n  async componentDidMount() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    const {\n      id\n    } = params;\n    const musics = await getMusics(id);\n    this.setState({\n      musics\n    });\n    this.setState({\n      loading: true\n    });\n    const favorites = await getFavoriteSongs();\n    this.setState({\n      favorite_songs: favorites,\n      loading: false\n    });\n  }\n\n  isFavorite(trackId) {\n    console.log(trackId);\n    return this.state.favorite_songs ? this.state.favorite_songs.some(music => music.trackId === trackId) : false;\n  }\n\n  render() {\n    // this.setMusics();\n    const {\n      musics\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), musics !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"artist-name\",\n          children: musics[0].artistName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"album-name\",\n          children: [musics[0].collectionName, \" \", musics[0].artistName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), musics.map(music => /*#__PURE__*/_jsxDEV(MusicCard, {\n          music: music,\n          favorites: this.state.favorite_songs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this)), this.state.loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 35\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/leonardo/Área de Trabalho/Trybe/projects/sd-016-b-project-trybetunes/src/pages/Album.jsx"],"names":["React","Component","Header","MusicCard","getMusics","getFavoriteSongs","Loading","Album","constructor","state","musics","undefined","loading","favorite_songs","isFavorite","bind","componentDidMount","match","props","params","id","setState","favorites","trackId","console","log","some","music","render","artistName","collectionName","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,eAAe,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAC3CO,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAEC,SADG;AAEXC,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAKA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB,CARY,CASZ;AACD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAaF,KAAnB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAASD,MAAf;AACA,UAAMT,MAAM,GAAG,MAAMN,SAAS,CAACgB,EAAD,CAA9B;AAEA,SAAKC,QAAL,CAAc;AACZX,MAAAA;AADY,KAAd;AAIA,SAAKW,QAAL,CAAc;AACZT,MAAAA,OAAO,EAAE;AADG,KAAd;AAIA,UAAMU,SAAS,GAAG,MAAMjB,gBAAgB,EAAxC;AAEA,SAAKgB,QAAL,CAAc;AACZR,MAAAA,cAAc,EAAES,SADJ;AAEZV,MAAAA,OAAO,EAAE;AAFG,KAAd;AAID;;AAEDE,EAAAA,UAAU,CAACS,OAAD,EAAU;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAO,KAAKd,KAAL,CAAWI,cAAX,GACH,KAAKJ,KAAL,CAAWI,cAAX,CAA0Ba,IAA1B,CAAgCC,KAAD,IAAWA,KAAK,CAACJ,OAAN,KAAkBA,OAA5D,CADG,GAEH,KAFJ;AAGD;;AAEDK,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAElB,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,MAAM,KAAKC,SAAX,gBACC;AAAA,gCACE;AAAG,yBAAY,aAAf;AAAA,oBAA8BD,MAAM,CAAC,CAAD,CAAN,CAAUmB;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,yBAAY,YAAf;AAAA,qBACGnB,MAAM,CAAC,CAAD,CAAN,CAAUoB,cADb,OAC8BpB,MAAM,CAAC,CAAD,CAAN,CAAUmB,UADxC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAKGnB,MAAM,CAACqB,GAAP,CAAYJ,KAAD,iBACV,QAAC,SAAD;AAAW,UAAA,KAAK,EAAEA,KAAlB;AAAyB,UAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWI;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADD,CALH,EAQG,KAAKJ,KAAL,CAAWG,OAAX,gBAAqB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAArB,GAAmC,IARtC;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAWG,IAbN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiBD;;AA9D0C","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport Loading from '../components/Loading';\n\nexport default class Album extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      musics: undefined,\n      loading: false,\n      favorite_songs: [],\n    };\n    this.isFavorite = this.isFavorite.bind(this);\n    // this.setMusics = this.setMusics.bind(this);\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n    const musics = await getMusics(id);\n\n    this.setState({\n      musics\n    });\n\n    this.setState({\n      loading: true,\n    });\n\n    const favorites = await getFavoriteSongs();\n\n    this.setState({\n      favorite_songs: favorites,\n      loading: false,\n    });\n  }\n\n  isFavorite(trackId) {\n    console.log(trackId);\n    return this.state.favorite_songs\n      ? this.state.favorite_songs.some((music) => music.trackId === trackId)\n      : false;\n  }\n\n  render() {\n    // this.setMusics();\n    const { musics } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        {musics !== undefined ? (\n          <div>\n            <p data-testid=\"artist-name\">{musics[0].artistName}</p>\n            <p data-testid=\"album-name\">\n              {musics[0].collectionName} {musics[0].artistName}\n            </p>\n            {musics.map((music) => (\n              <MusicCard music={music} favorites={this.state.favorite_songs} />\n            ))}\n            {this.state.loading ? <Loading /> : null}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}